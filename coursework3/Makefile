#############################################################################
# Makefile for building: cg_cw3
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sat Oct 26 16:33:26 2013
# Project:  cg_cw3.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -unix -o Makefile cg_cw3.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include -I. -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib64 -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = BoundingBox.cpp \
		Cone.cpp \
		Cylinder.cpp \
		Drawable.cpp \
		Geometry.cpp \
		GLApplicationController.cpp \
		GLApplicationMain.cpp \
		GLCanvasWidget.cpp \
		GLWindow.cpp \
		LightingManager.cpp \
		Matrix44.cpp \
		Mesh.cpp \
		Sphere.cpp \
		Texture.cpp \
		Torus.cpp \
		Vector3.cpp moc_GLApplicationController.cpp \
		moc_GLCanvasWidget.cpp \
		moc_GLWindow.cpp
OBJECTS       = BoundingBox.o \
		Cone.o \
		Cylinder.o \
		Drawable.o \
		Geometry.o \
		GLApplicationController.o \
		GLApplicationMain.o \
		GLCanvasWidget.o \
		GLWindow.o \
		LightingManager.o \
		Matrix44.o \
		Mesh.o \
		Sphere.o \
		Texture.o \
		Torus.o \
		Vector3.o \
		moc_GLApplicationController.o \
		moc_GLCanvasWidget.o \
		moc_GLWindow.o
DIST          = /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/opengl.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		cg_cw3.pro
QMAKE_TARGET  = cg_cw3
DESTDIR       = 
TARGET        = cg_cw3

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: cg_cw3.pro  /usr/lib64/qt4/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/opengl.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile cg_cw3.pro
/usr/lib64/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/opengl.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile cg_cw3.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cg_cw31.0.0 || $(MKDIR) .tmp/cg_cw31.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cg_cw31.0.0/ && $(COPY_FILE) --parents BoundingBox.h Common.h Cone.h Cylinder.h Drawable.h Geometry.h GLApplicationController.h GLCanvasWidget.h GLWindow.h LightingManager.h Matrix44.h Mesh.h Sphere.h Texture.h Torus.h Vector3.h .tmp/cg_cw31.0.0/ && $(COPY_FILE) --parents BoundingBox.cpp Cone.cpp Cylinder.cpp Drawable.cpp Geometry.cpp GLApplicationController.cpp GLApplicationMain.cpp GLCanvasWidget.cpp GLWindow.cpp LightingManager.cpp Matrix44.cpp Mesh.cpp Sphere.cpp Texture.cpp Torus.cpp Vector3.cpp .tmp/cg_cw31.0.0/ && (cd `dirname .tmp/cg_cw31.0.0` && $(TAR) cg_cw31.0.0.tar cg_cw31.0.0 && $(COMPRESS) cg_cw31.0.0.tar) && $(MOVE) `dirname .tmp/cg_cw31.0.0`/cg_cw31.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cg_cw31.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_GLApplicationController.cpp moc_GLCanvasWidget.cpp moc_GLWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_GLApplicationController.cpp moc_GLCanvasWidget.cpp moc_GLWindow.cpp
moc_GLApplicationController.cpp: GLWindow.h \
		Drawable.h \
		Vector3.h \
		GLCanvasWidget.h \
		LightingManager.h \
		GLApplicationController.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GLApplicationController.h -o moc_GLApplicationController.cpp

moc_GLCanvasWidget.cpp: Drawable.h \
		Vector3.h \
		LightingManager.h \
		GLCanvasWidget.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GLCanvasWidget.h -o moc_GLCanvasWidget.cpp

moc_GLWindow.cpp: Drawable.h \
		Vector3.h \
		GLCanvasWidget.h \
		LightingManager.h \
		GLWindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) GLWindow.h -o moc_GLWindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

BoundingBox.o: BoundingBox.cpp BoundingBox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BoundingBox.o BoundingBox.cpp

Cone.o: Cone.cpp Cone.h \
		Mesh.h \
		Drawable.h \
		Vector3.h \
		Geometry.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cone.o Cone.cpp

Cylinder.o: Cylinder.cpp Cylinder.h \
		Mesh.h \
		Drawable.h \
		Vector3.h \
		Geometry.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cylinder.o Cylinder.cpp

Drawable.o: Drawable.cpp Drawable.h \
		Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Drawable.o Drawable.cpp

Geometry.o: Geometry.cpp Geometry.h \
		Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Geometry.o Geometry.cpp

GLApplicationController.o: GLApplicationController.cpp GLApplicationController.h \
		GLWindow.h \
		Drawable.h \
		Vector3.h \
		GLCanvasWidget.h \
		LightingManager.h \
		Sphere.h \
		Mesh.h \
		Geometry.h \
		Texture.h \
		Cylinder.h \
		Cone.h \
		Torus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLApplicationController.o GLApplicationController.cpp

GLApplicationMain.o: GLApplicationMain.cpp GLWindow.h \
		Drawable.h \
		Vector3.h \
		GLCanvasWidget.h \
		LightingManager.h \
		GLApplicationController.h \
		Sphere.h \
		Mesh.h \
		Geometry.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLApplicationMain.o GLApplicationMain.cpp

GLCanvasWidget.o: GLCanvasWidget.cpp GLCanvasWidget.h \
		Drawable.h \
		Vector3.h \
		LightingManager.h \
		Geometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLCanvasWidget.o GLCanvasWidget.cpp

GLWindow.o: GLWindow.cpp GLWindow.h \
		Drawable.h \
		Vector3.h \
		GLCanvasWidget.h \
		LightingManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLWindow.o GLWindow.cpp

LightingManager.o: LightingManager.cpp LightingManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LightingManager.o LightingManager.cpp

Matrix44.o: Matrix44.cpp Matrix44.h \
		Vector3.h \
		Geometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Matrix44.o Matrix44.cpp

Mesh.o: Mesh.cpp Mesh.h \
		Drawable.h \
		Vector3.h \
		Geometry.h \
		Texture.h \
		Matrix44.h \
		Common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Mesh.o Mesh.cpp

Sphere.o: Sphere.cpp Sphere.h \
		Mesh.h \
		Drawable.h \
		Vector3.h \
		Geometry.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sphere.o Sphere.cpp

Texture.o: Texture.cpp Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Texture.o Texture.cpp

Torus.o: Torus.cpp Torus.h \
		Mesh.h \
		Drawable.h \
		Vector3.h \
		Geometry.h \
		Texture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Torus.o Torus.cpp

Vector3.o: Vector3.cpp Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vector3.o Vector3.cpp

moc_GLApplicationController.o: moc_GLApplicationController.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLApplicationController.o moc_GLApplicationController.cpp

moc_GLCanvasWidget.o: moc_GLCanvasWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLCanvasWidget.o moc_GLCanvasWidget.cpp

moc_GLWindow.o: moc_GLWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLWindow.o moc_GLWindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

